//
// MiscAPI.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

open class MiscAPI {

    /**
     This API call is meant to provide information about the capabilities and limitations of the current API.
     
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the result
     */
    open class func getAPICapabilities(apiResponseQueue: DispatchQueue = OpenStreetMap.apiResponseQueue, completion: @escaping ((_ result: Swift.Result<APICapabilitiesResponse, Error>) -> Void)) {
        getAPICapabilitiesWithRequestBuilder().execute(apiResponseQueue) { result -> Void in
            switch result {
            case let .success(response):
                completion(.success(response.body!))
            case let .failure(error):
                completion(.failure(error))
            }
        }
    }

    /**
     This API call is meant to provide information about the capabilities and limitations of the current API.
     - GET /api/capabilities
     - returns: RequestBuilder<APICapabilitiesResponse> 
     */
    open class func getAPICapabilitiesWithRequestBuilder() -> RequestBuilder<APICapabilitiesResponse> {
        let localVariablePath = "/api/capabilities"
        let localVariableURLString = OpenStreetMap.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<APICapabilitiesResponse>.Type = OpenStreetMap.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters)
    }

    /**
     Returns the permissions granted to the current API connection.
     
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the result
     */
    open class func getAPIPermissions(apiResponseQueue: DispatchQueue = OpenStreetMap.apiResponseQueue, completion: @escaping ((_ result: Swift.Result<OSMResponse, Error>) -> Void)) {
        getAPIPermissionsWithRequestBuilder().execute(apiResponseQueue) { result -> Void in
            switch result {
            case let .success(response):
                completion(.success(response.body!))
            case let .failure(error):
                completion(.failure(error))
            }
        }
    }

    /**
     Returns the permissions granted to the current API connection.
     - GET /api/0.6/permissions
     - BASIC:
       - type: http
       - name: basicAuth
     - returns: RequestBuilder<OSMResponse> 
     */
    open class func getAPIPermissionsWithRequestBuilder() -> RequestBuilder<OSMResponse> {
        let localVariablePath = "/api/0.6/permissions"
        let localVariableURLString = OpenStreetMap.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<OSMResponse>.Type = OpenStreetMap.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters)
    }

    /**
     Returns a list of API versions supported by this instance.
     
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the result
     */
    open class func getAPIVersions(apiResponseQueue: DispatchQueue = OpenStreetMap.apiResponseQueue, completion: @escaping ((_ result: Swift.Result<APIVersionsResponse, Error>) -> Void)) {
        getAPIVersionsWithRequestBuilder().execute(apiResponseQueue) { result -> Void in
            switch result {
            case let .success(response):
                completion(.success(response.body!))
            case let .failure(error):
                completion(.failure(error))
            }
        }
    }

    /**
     Returns a list of API versions supported by this instance.
     - GET /api/versions
     - returns: RequestBuilder<APIVersionsResponse> 
     */
    open class func getAPIVersionsWithRequestBuilder() -> RequestBuilder<APIVersionsResponse> {
        let localVariablePath = "/api/versions"
        let localVariableURLString = OpenStreetMap.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<APIVersionsResponse>.Type = OpenStreetMap.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters)
    }
}
